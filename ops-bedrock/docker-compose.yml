version: '3.4'

# This Compose file is expected to be used with the devnet-up.sh script.
# The volumes below mount the configs generated by the script into each
# service.

volumes:
  l1_data:
  l2_data:
  op_log:


services:
  l1:
    build:
      context: .
      dockerfile: Dockerfile.l1
    ports:
      - "8545:8545"
    volumes:
      - "l1_data:/db"
      - "${PWD}/../.devnet/genesis-l1.json:/genesis.json"
      - "${PWD}/test-jwt-secret.txt:/config/test-jwt-secret.txt"

  l2:
    build:
      context: .
      dockerfile: Dockerfile.l2
    ports:
      - "9545:8545"
    volumes:
      - "l2_data:/db"
      - "${PWD}/../.devnet/genesis-l2.json:/genesis.json"
      - "${PWD}/test-jwt-secret.txt:/config/test-jwt-secret.txt"
    entrypoint:  # pass the L2 specific flags by overriding the entry-point and adding extra arguments
      - "/bin/sh"
      - "/entrypoint.sh"
      - "--authrpc.jwtsecret=/config/test-jwt-secret.txt"

  op-node:
    depends_on:
      - l1
      - l2
    build:
      context: ../
      dockerfile: ./op-node/Dockerfile
    command: >
      op-node
      --l1=ws://l1:8546
      --l2=http://l2:8551
      --l2.jwt-secret=/config/test-jwt-secret.txt
      --sequencer.enabled
      --sequencer.l1-confs=0
      --verifier.l1-confs=0
      --p2p.sequencer.key=8b3a350cf5c34c9194ca85829a2df0ec3153be0318b5e2d3348e872092edffba
      --rollup.config=/rollup.json
      --rpc.addr=0.0.0.0
      --rpc.port=8545
      --p2p.listen.ip=0.0.0.0
      --p2p.listen.tcp=9003
      --p2p.listen.udp=9003
      --snapshotlog.file=/op_log/snapshot.log
      --p2p.priv.path=/config/p2p-node-key.txt
      --metrics.enabled
      --metrics.addr=0.0.0.0
      --metrics.port=7300
      --pprof.enabled
    ports:
      - "7545:8545"
      - "9003:9003"
      - "7300:7300"
      - "6060:6060"
    volumes:
      - "${PWD}/p2p-sequencer-key.txt:/config/p2p-sequencer-key.txt"
      - "${PWD}/p2p-node-key.txt:/config/p2p-node-key.txt"
      - "${PWD}/test-jwt-secret.txt:/config/test-jwt-secret.txt"
      - "${PWD}/../.devnet/rollup.json:/rollup.json"
      - op_log:/op_log

  op-proposer:
    depends_on:
      - l1
      - l2
      - op-node
    build:
      context: ../
      dockerfile: ./op-proposer/Dockerfile
    ports:
      - "6062:6060"
      - "7302:7300"
    environment:
      OP_PROPOSER_L1_ETH_RPC: http://l1:8545
      OP_PROPOSER_ROLLUP_RPC: http://op-node:8545
      OP_PROPOSER_POLL_INTERVAL: 1s
      OP_PROPOSER_NUM_CONFIRMATIONS: 1
      OP_PROPOSER_SAFE_ABORT_NONCE_TOO_LOW_COUNT: 3
      OP_PROPOSER_RESUBMISSION_TIMEOUT: 30s
      OP_PROPOSER_MNEMONIC: test test test test test test test test test test test junk
      OP_PROPOSER_L2_OUTPUT_HD_PATH: "m/44'/60'/0'/0/1"
      OP_PROPOSER_LOG_TERMINAL: "true"
      OP_PROPOSER_L2OO_ADDRESS: "${L2OO_ADDRESS}"
      OP_PROPOSER_PPROF_ENABLED: "true"
      OP_PROPOSER_METRICS_ENABLED: "true"
      OP_PROPOSER_ALLOW_NON_FINALIZED: "true"

  dalc0:
    container_name: dalc0
    image: "ghcr.io/celestiaorg/celestia-node:sha-f4e582e"
    environment:
      - NODE_TYPE=bridge
      - "CELESTIA_CUSTOM=private:B37ADC527B29B88D91CC758D1F4190D2C48CEEEB981175AEF1159099B09E1D04"
    command: [
      "celestia", "bridge",
      "start",
      "--core.ip", "192.167.10.0",
      "--keyring.accname", "key-1",
    ]
    volumes:
      - ${PWD}/celestia-app/private/keyring-test:/root/.celestia-bridge-private/keys/keyring-test:ro
      - ${PWD}/celestia-node/bridge/config.toml:/root/.celestia-bridge-private/config.toml
    ports:
      - "26658:26658"
    depends_on:
      - core0
    networks:
      localnet:
        ipv4_address: 192.167.3.0
  core0:
    container_name: core0
    image: "celestia-app:v0.7.0"
    environment:
      - CELESTIA_HOME=/root/.celestia-app
    command: [
      "start",
      "--home", "/root/.celestia-app",
      "--rpc.laddr", "tcp://0.0.0.0:26657"
    ]
    volumes:
      - ${PWD}/celestia-app/private/config/priv_validator_key.json:/root/.celestia-app/config/priv_validator_key.json:ro
      - ${PWD}/celestia-app/private/config/node_key.json:/root/.celestia-app/config/node_key.json:ro
      - ${PWD}/celestia-app/private/config/genesis.json:/root/.celestia-app/config/genesis.json:ro
      - ${PWD}/celestia-app/private/config/config.toml:/root/.celestia-app/config/config.toml:ro
      - ${PWD}/celestia-app/private/config/client.toml:/root/.celestia-app/config/client.toml:ro
      - ${PWD}/celestia-app/private/keyring-test:/root/.celestia-app/keyring-test:ro
    networks:
      localnet:
        ipv4_address: 192.167.10.0
  light0:
    container_name: light0
    image: "ghcr.io/celestiaorg/celestia-node:sha-042ebe1"
    environment:
      - NODE_TYPE=light
      - CELESTIA_PRIVATE_GENESIS=02EED4BCFAF0CC8A3D1100D588E571FBF44219488F01AB48870BC9015A9F105A
    command: [
      "celestia", "light",
      "--node.store", "/celestia-light",
      "start",
      "--headers.trusted-peers",
      "/ip4/192.167.1.0/tcp/2121/p2p/12D3KooWL8z3KARAYJcmExhDsGwKbjChKeGaJpFPENyADdxmEHzw"
    ]
    volumes:
      - ${PWD}/celestia-node/light/light0/nodekey0:/celestia-light/keys/OAZHALLLMV4Q:ro
    networks:
      localnet:
        ipv4_address: 192.167.2.0
    depends_on:
      - dalc0
  op-batcher:
    depends_on:
      - l1
      - l2
      - op-node
      - core0
    build:
      context: ../
      dockerfile: ./op-batcher/Dockerfile
    ports:
      - "6061:6060"
      - "7301:7300"
    environment:
      OP_BATCHER_L1_ETH_RPC: http://l1:8545
      OP_BATCHER_L2_ETH_RPC: http://l2:8545
      OP_BATCHER_ROLLUP_RPC: http://op-node:8545
      OP_BATCHER_DA_RPC: http://host.docker.internal:26658
      OP_BATCHER_NAMESPACE_ID: "e8e5f679bf7116cb"
      OP_BATCHER_MIN_L1_TX_SIZE_BYTES: 1
      OP_BATCHER_MAX_L1_TX_SIZE_BYTES: 120000
      OP_BATCHER_CHANNEL_TIMEOUT: 40
      OP_BATCHER_POLL_INTERVAL: 1s
      OP_BATCHER_NUM_CONFIRMATIONS: 1
      OP_BATCHER_SAFE_ABORT_NONCE_TOO_LOW_COUNT: 3
      OP_BATCHER_RESUBMISSION_TIMEOUT: 30s
      OP_BATCHER_MNEMONIC: test test test test test test test test test test test junk
      OP_BATCHER_SEQUENCER_HD_PATH: "m/44'/60'/0'/0/2"
      OP_BATCHER_SEQUENCER_BATCH_INBOX_ADDRESS: "${SEQUENCER_BATCH_INBOX_ADDRESS}"
      OP_BATCHER_LOG_TERMINAL: "true"
      OP_BATCHER_PPROF_ENABLED: "true"
      OP_BATCHER_METRICS_ENABLED: "true"

  stateviz:
    build:
      context: ../
      dockerfile: ./ops-bedrock/Dockerfile.stateviz
    command:
      - stateviz
      - -addr=0.0.0.0:8080
      - -snapshot=/op_log/snapshot.log
      - -refresh=10s
    ports:
      - "9090:8080"
    volumes:
      - op_log:/op_log:ro


networks:
  localnet:
    driver: bridge
    ipam:
      driver: default
      config:
        -
          subnet: 192.167.0.0/16
